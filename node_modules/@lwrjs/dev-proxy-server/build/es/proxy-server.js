import express from 'express';
import { addLocalProxyMiddleware, addRemoteProxyMiddleware } from './middleware.js';
/**
 * A simple configuration-enabled local development proxy server.
 */
export class LwrProxyServer {
    constructor(config) {
        this.proxyServer = express();
        this.config = config;
        addRemoteProxyMiddleware(this.proxyServer, this.config);
        addLocalProxyMiddleware(this.proxyServer, this.config.defaultHost, this.config.remoteOrigin);
    }
    async listen(callback) {
        const { proxyServer, config } = this;
        const { port } = config;
        return new Promise((resolve, reject) => {
            const server = proxyServer.listen(port, async () => {
                const opts = { port };
                callback?.(opts);
                resolve(opts);
            });
            const handleError = (err) => {
                server.off('error', handleError);
                if (err.code === 'EADDRINUSE') {
                    err = new Error(`Port ${port} is already in use.`);
                }
                reject(err);
            };
            server.on('error', handleError);
        });
    }
}
//# sourceMappingURL=proxy-server.js.map