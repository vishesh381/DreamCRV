import type { LwrErrorRoute, LwrRoute, NormalizedLwrErrorRoute, NormalizedLwrRoute, NormalizedRouteHandlersConfig, ResourcePaths, RouteHandlersConfig } from '@lwrjs/types';
type ViewOrErrorRoute = LwrRoute | LwrErrorRoute;
type NormalizedRoute<T extends ViewOrErrorRoute> = T extends LwrRoute ? NormalizedLwrRoute : NormalizedLwrErrorRoute;
export declare function normalizeRoutes<T extends ViewOrErrorRoute>(routes: T[], routeHandlers: RouteHandlersConfig): NormalizedRoute<T>[];
export declare function normalizeRoutePaths<T extends ViewOrErrorRoute>(routes: T[] | undefined, resourcePaths: ResourcePaths): NormalizedRoute<T>[];
export declare function normalizeRouteHandlers(routeHandlers: RouteHandlersConfig): NormalizedRouteHandlersConfig;
export declare function normalizeRouteHandlerPaths(routeHandlers: NormalizedRouteHandlersConfig, resourcePaths: ResourcePaths): NormalizedRouteHandlersConfig;
export {};
//# sourceMappingURL=routes.d.ts.map