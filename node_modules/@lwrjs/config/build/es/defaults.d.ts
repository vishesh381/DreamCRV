import type { BundleConfig, LwrGlobalConfig, LwrRoute, NormalizedLwrAppBootstrapConfig, StaticSiteGenerator } from '@lwrjs/types';
/**
 * MIN_LWR_VERSION
 * Minimum LWR version required for the routes to function properly.
 * Anytime we believe we are checking in a breaking change, the required version should be updated
 * manually for all routes to continue functioning properly.
 */
export declare const MIN_LWR_VERSION = "0.12.0";
/**
 * MIN_LWC_VERSION
 * Minimum LWC version required for the routes to function properly.
 * Anytime we believe we are checking in a breaking change, the required version should be updated
 * manually for all routes to continue functioning properly.
 */
export declare const MIN_LWC_VERSION = "6.1.0";
export declare const DEFAULT_LWR_CONFIG_JSON = "$rootDir/lwr.config.json";
export declare const DEFAULT_GENERATOR_CONFIG: StaticSiteGenerator;
export declare const DEFAULT_ROOT_DIR: string;
export declare const DEFAULT_AMD_LOADER = "lwr/loader";
export declare const DEFAULT_AMD_LOADER_LEGACY = "lwr/loaderLegacy";
export declare const DEFAULT_ESM_LOADER = "lwr/esmLoader";
export declare const DEFAULT_SERVICE_PACKAGE_NAME: RegExp;
export declare const DEFAULT_LWR_MODULES: {
    npm: string;
}[];
export declare const DEFAULT_ESM_BUNDLE_EXCLUSIONS: string[];
export declare const DEFAULT_AMD_BUNDLE_EXCLUSIONS: string[];
export declare function getDefaultBundleConfig(mode?: string): BundleConfig;
export declare const LWR_INFO_ROUTE: LwrRoute;
export declare const DEFAULT_LWR_CONFIG: Required<LwrGlobalConfig>;
export declare const DEFAULT_LWR_BOOTSTRAP_CONFIG: NormalizedLwrAppBootstrapConfig;
//# sourceMappingURL=defaults.d.ts.map