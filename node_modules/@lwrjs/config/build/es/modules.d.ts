import type { HooksPlugin, NormalizedLwrGlobalConfig, RouteHandlers, Services } from '@lwrjs/types';
/**
 * Import and instantiate hooks defined in the global config
 *
 * @remarks
 * The optional dependency `esbuild` MUST be installed to load hook modules.
 *
 * @param config - global config
 * @returns {HooksPlugin[]} all instantiated hooks
 */
export declare function loadHooks(config: NormalizedLwrGlobalConfig): Promise<HooksPlugin[]>;
/**
 * Load service modules from the filepaths configured in the global config
 *
 * @remarks
 * The optional dependency `esbuild` MUST be installed to load service modules.
 *
 * @param config - global config
 * @returns {Services} all of the imported service constructors
 */
export declare function loadServices(config: NormalizedLwrGlobalConfig): Promise<Services>;
/**
 * Load all route handlers from the filepaths configured in the global config
 *
 * @remarks
 * The optional dependency `esbuild` MUST be installed to load route handler modules.
 *
 * @param config - global config
 * @returns {Routes} resolved route handlers mapped by id
 */
export declare function loadRouteHandlers(config: NormalizedLwrGlobalConfig): Promise<RouteHandlers>;
//# sourceMappingURL=modules.d.ts.map