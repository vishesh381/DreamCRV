import type { ImportMetadata, AppMetadata, ServerData, ClientBootstrapConfig } from '@lwrjs/types';
import type { ImportMap } from './modules/lwr/loaderLegacy/importMap/importMap.js';
import type { ProfilerAPI, LogDispatcher } from 'lwr/profiler';
export type GlobalThis = {
    LWR: Partial<ClientBootstrapConfig> & {
        define: LoaderDefine;
    };
    [key: string]: unknown;
};
export type LoaderDefine = (id: string, deps: string[], exporter: Function, hash?: object) => void;
export type DefineArguments = [string, string[], Function, object?];
export type LoaderClass = {
    new (config?: LoaderConfig): LoaderAPI;
};
export interface BaseLoaderAPI {
    define: LoaderDefine;
    load(id: string): Promise<unknown>;
    registerExternalModules(modules: string[]): void;
    services: Record<string, Function>;
    clearRegistry: Function;
}
export interface LoaderAPI extends BaseLoaderAPI {
    registerImportMappings(mappings?: ImportMap): Promise<void>;
}
export type LoaderConfig = {
    baseUrl?: string;
    profiler: ProfilerAPI;
    serverData?: ServerData;
    appMetadata?: AppMetadata;
};
export type CustomErrorHandler = (error: Error) => void;
export type RegisterCustomErrorHandler = (callback: CustomErrorHandler) => void;
export type InitializeApp = () => void;
export interface CustomInitAPI {
    initializeApp: InitializeApp;
    onBootstrapError: RegisterCustomErrorHandler;
    attachDispatcher: (dispatcher: LogDispatcher) => void;
    define: LoaderDefine;
}
export type CustomInitFunction = (lwr: CustomInitAPI, config: ClientBootstrapConfig) => void;
export type Endpoints = {
    uris: Record<string, string>;
    modifiers?: Record<string, string>;
};
/**
 * Fingerprints loader extensions
 */
export interface FingerprintsLoaderAPI extends BaseLoaderAPI {
    registerImportMappings(importMetadata: ImportMetadata, rootSpecifiers: string[]): Promise<void>;
}
export interface FingerprintsLoaderConfig extends LoaderConfig {
    endpoints?: Endpoints;
}
export type FingerprintsLoaderClass = {
    new (config?: LoaderConfig): FingerprintsLoaderAPI;
};
//# sourceMappingURL=types.d.ts.map