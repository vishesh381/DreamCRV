import { hasConsole } from '../utils/dom.js';
// find the longest set of segments from path which are a key in matchObj
// eg: getMatch('/a/b/c', { '/a/b': ..., '/a': ..., '/d/e/f': ...}) => '/a/b'
function getMatch(path, matchObj) {
    if (matchObj[path]) {
        return path;
    }
    let sepIndex = path.length;
    do {
        const segment = path.slice(0, sepIndex + 1);
        if (segment in matchObj) {
            return segment;
        }
    } while (path.length > 1 && (sepIndex = path.lastIndexOf('/', sepIndex - 1)) !== -1);
}
function targetWarning(match, target, msg) {
    if (hasConsole) {
        // eslint-disable-next-line lwr/no-unguarded-apis, no-undef
        console.warn('Package target ' + msg + ", resolving target '" + target + "' for " + match);
    }
}
export { getMatch, targetWarning };
//# sourceMappingURL=utils.js.map