import type { CustomResponse, LoadHookResponse, ResolveHookResponse } from '@lwrjs/types';
export declare function isCustomResponse(response: CustomResponse | globalThis.Response): response is CustomResponse;
export declare function isFetchResponse(response: globalThis.Response | CustomResponse): response is globalThis.Response;
export declare function isResponseAPromise(response: ResolveHookResponse | LoadHookResponse | Promise<ResolveHookResponse> | Promise<LoadHookResponse>): boolean;
export declare function evaluateLoadHookResponse(response: LoadHookResponse, id: string): Promise<boolean>;
export declare function evaluateLoadHook(id: string, hookPromise: Promise<LoadHookResponse>): Promise<LoadHookResponse>;
//# sourceMappingURL=resolveAndLoadHook.d.ts.map