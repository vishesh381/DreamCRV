import { LoaderError, STALE_HOOK_ERROR } from '../errors/messages.js';
import { reportError } from '../errors/reportError.js';
export function evaluateHandleStaleModuleHooks(handleStaleModuleHooks, hookArgs) {
    const { name, oldUrl, newUrl } = hookArgs;
    // keep evaluating hooks if return value is null
    for (let i = 0; i < handleStaleModuleHooks.length; i++) {
        const hook = handleStaleModuleHooks[i];
        try {
            const hookResult = hook({ name, oldUrl, newUrl });
            if (hookResult !== null) {
                break;
            }
        }
        catch (e) {
            reportError(new LoaderError(STALE_HOOK_ERROR));
        }
    }
}
//# sourceMappingURL=moduleInvalidation.js.map