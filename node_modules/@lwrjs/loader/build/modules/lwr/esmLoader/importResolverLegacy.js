/**
 * Simplified version of the AMD Import Metadata Resolver.
 * Just read the legacy ImportMap at construction time.
 */
export default class ImportResolverLegacy {
    constructor(importMap) {
        this.importURICache = importMap && importMap.imports ? importMap : { imports: {} };
    }
    /**
     * Resolves the URL for a specifier if it is in the global imports
     * This is using the pre-fingerprints importMappings syntax
     * @param specifier - Id of module we are looking for an id for
     */
    legacyResolve(specifier) {
        return this.importURICache && this.importURICache.imports && this.importURICache.imports[specifier];
    }
}
//# sourceMappingURL=importResolverLegacy.js.map