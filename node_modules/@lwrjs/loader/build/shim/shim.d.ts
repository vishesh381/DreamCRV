import type { GlobalThis } from '../types.js';
export default class LoaderShim {
    private global;
    private config;
    private bootReady;
    private loaderSpecifier;
    private defineCache;
    private orderedDefs;
    private errorHandler?;
    private watchdogTimerId?;
    constructor(global: GlobalThis);
    private canInit;
    /**
     * Create a temporary LWR.define() function which captures all
     * calls that occur BEFORE the full loader module is available
     *
     * Each call to LWR.define() is stored in 2 ways:
     *      - in a map as [moduleName, arguments] pairs
     *      - each moduleName is pushed onto an array, to preserve
     *          the order in which the modules were defined
     */
    private tempDefine;
    private postCustomInit;
    private initApp;
    private waitForDOMContentLoaded;
    private createProfilerModule;
    private mountApp;
    private enterErrorState;
    private startWatchdogTimer;
}
//# sourceMappingURL=shim.d.ts.map