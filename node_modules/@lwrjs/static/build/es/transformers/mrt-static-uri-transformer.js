import { logger } from '@lwrjs/diagnostics';
import { getMrtArtifactUrl } from '@lwrjs/shared-utils';
export default function mrtStaticUriTransformer() {
    return {
        name: 'mrt-static-uri-transformer',
        /**
         * Transform to MRT Bundle URL
         */
        async transformUri(uriDef, _def, runtimeEnvironment) {
            // If this is an asset and the ASSETS_ON_LAMBDA flag is set to true do not transform the URI
            if (uriDef.artifactType === 'asset' && runtimeEnvironment?.featureFlags?.ASSETS_ON_LAMBDA) {
                logger.debug({
                    label: `${this.name}`,
                    message: `uri not transformed ${uriDef.entry} -> ${uriDef.uri}`,
                });
                return {
                    ...uriDef,
                    external: false,
                };
            }
            // Remove the basePath from the uri
            let basePathlessUri = uriDef.uri;
            if (runtimeEnvironment?.basePath) {
                basePathlessUri = uriDef.uri.replace(runtimeEnvironment?.basePath, '');
            }
            const uri = getMrtArtifactUrl(runtimeEnvironment?.basePath || '', basePathlessUri);
            logger.debug({
                label: `${this.name}`,
                message: `normalized ${uriDef.artifactType} url ${uriDef.entry} -> ${uri}`,
            });
            return {
                ...uriDef,
                uri,
                immutable: true,
                external: true,
            };
        },
    };
}
//# sourceMappingURL=mrt-static-uri-transformer.js.map