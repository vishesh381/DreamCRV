import type { PublicResourceRegistry, ResourceDefinition, ResourceIdentifier, ResourceProvider, ResourceRegistry, RuntimeEnvironment, RuntimeParams, UriTransformPlugin } from '@lwrjs/types';
export declare class LwrResourceRegistry implements ResourceRegistry {
    name: string;
    providers: ResourceProvider[];
    transformers: UriTransformPlugin[];
    constructor();
    addResourceProviders(providers: ResourceProvider[]): void;
    addResourceTransformers(transformers: UriTransformPlugin[]): void;
    getResource<T extends ResourceIdentifier, R extends RuntimeEnvironment>(resourceId: T, runtimeEnvironment: R, runtimeParams?: RuntimeParams): Promise<ResourceDefinition | undefined>;
    resolveResourceUri<M extends ResourceIdentifier, R extends RuntimeEnvironment>({ specifier, version }: M, { apiVersion, format, basePath }: R): Promise<string>;
    getPublicApi(): PublicResourceRegistry;
}
//# sourceMappingURL=index.d.ts.map