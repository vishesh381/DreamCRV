export declare const unresolvable: import("../types.js").OutputMessagesCategory<{
    ASSET: (assetPath: string) => {
        category: "lwrUnresolvable/asset";
        message: string;
    };
    DIR_ALIAS: (assetPath: string) => {
        category: "lwrUnresolvable/asset";
        message: string;
    };
    MODULE: (moduleSpecifier: string) => {
        category: "lwrUnresolvable/module";
        message: string;
    };
    MODULE_ENTRY: (moduleSpecifier: string) => {
        category: "lwrUnresolvable/module";
        message: string;
    };
    BUNDLE: (specifier: string) => {
        category: "lwrUnresolvable/bundle";
        message: string;
    };
    LWC_MODULE: (name: string) => {
        category: "lwrUnresolvable/module";
        message: string;
    };
    SIGNED_MODULE: (moduleSpecifier: string, signature: string) => {
        category: "lwrUnresolvable/module";
        message: string;
    };
    RESOURCE: (resourceSpecifier: string, resourceVersion: any) => {
        category: "lwrUnresolvable/resource";
        message: string;
    };
    VIEW: (viewPath: string) => {
        category: "lwrUnresolvable/view";
        message: string;
    };
    VIEW_CONFIG: (configPath: string) => {
        category: "lwrUnresolvable/view";
        message: string;
    };
    APP_CONFIG: (appId: string) => {
        category: "lwrUnresolvable/view";
        message: string;
    };
    INVALID_JSON: () => {
        category: "lwrUnresolvable/invalid";
        message: string;
    };
    INVALID_API_VERSION: (apiVersion: string, expectedVersion: any) => {
        category: "lwrUnresolvable/invalid";
        message: string;
    };
    INVALID_ENVIRONMENT: (environment: string) => {
        category: "lwrUnresolvable/invalid";
        message: string;
    };
    INVALID_SPECIFIER: (specifier: string) => {
        category: "lwrUnresolvable/invalid";
        message: string;
    };
    LABEL_MODULE: (file: string, error: string) => {
        category: "lwrUnresolvable/label";
        message: string;
    };
    ROUTES_MODULE: (file: string, error: string) => {
        category: "lwrUnresolvable/routes";
        message: string;
    };
    PRELOAD_MODULE: (specifier: string) => {
        category: "lwrUnresolvable/invalid";
        message: string;
    };
    INVALID_MODE: (mode: string) => {
        category: "lwrUnresolvable/invalid";
        message: string;
    };
    SSR_TIMEOUT: (specifier: string, time: number) => {
        category: "lwrUnresolvable/ssr";
        message: string;
    };
}>;
//# sourceMappingURL=unresolvable.d.ts.map