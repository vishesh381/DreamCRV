
import { By as _By, createUtamMixinCtor as _createUtamMixinCtor, UtamBaseRootPageObject as _UtamBaseRootPageObject } from '@utam/core';

async function _utam_get_content(driver, root) {
    let _element = root;
    const _locator = _By.css(".lwr-dynamic");
    return _element.findElement(_locator);
}

/**
 * @lwrjs/router Outlet dynamically renders LWC view components.
 * generated from JSON src/modules/lwr/outlet/__utam__/outlet.utam.json
 * @version 0.10
 * @author lwr-js
 */
export default class Outlet extends _UtamBaseRootPageObject {
    constructor(driver, element, locator = _By.css("lwr-outlet")) {
        super(driver, element, locator);
    }

    async __getRoot() {
        const driver = this.driver;
        const root = await this.getRootElement();
        const BaseUtamElement = _createUtamMixinCtor();
        return new BaseUtamElement(driver, root);
    }
    
    async getContent(ContainerCtor) {
        const driver = this.driver;
        const root = await this.getRootElement();
        let element = await _utam_get_content(driver, root);
        element = new ContainerCtor(driver, element);
        return element;
    }
    
    /**
     * Waits for the component inside the outlet to be available.
     */
    async waitForOutletContent() {
        await this.waitFor(async () => {
            const _statement0 = await this.__getRoot();
            const _result0 = await _statement0.containsElement(_By.css(".lwr-dynamic"), false);
            return _result0;
        });
        return this;
    }
    
}