import type { ViewSet } from 'lwr/router';
import type { Constructable } from 'lwr/routerUtils';
type ViewContext = {
    viewset: ViewSet;
    onComplete?: Function;
} | undefined;
type CurrentViewConfig = {
    viewName?: string;
};
/**
 * Services @wire(CurrentView) requests.
 * Hooks up to an Observable from the current navigation context.
 */
export declare const CurrentView: {
    new (callback: (value: Constructable<object>) => void): {
        update(config: CurrentViewConfig, context: ViewContext): Promise<void>;
        _callback(value: Constructable<object>): void;
        connect(): void;
        disconnect(): void;
    };
    setContext: (targetProvider: EventTarget, contextValue: ViewContext) => void;
    getContext: (targetProvider: EventTarget) => ViewContext;
    clearContext: (targetProvider: EventTarget) => void;
    subscribeContext: (targetProvider: EventTarget, consumer: any) => void;
    unsubscribeContext: (targetProvider: EventTarget, consumer: any) => void;
};
export {};
//# sourceMappingURL=currentView.d.ts.map