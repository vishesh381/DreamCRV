import type { ContextId } from 'lwr/navigationContext';
import type { PageReference } from 'lwr/router';
import type { NavigateOptions } from '../routerUtils/types.js';
/**
 * Navigate programmatically to a page reference.
 * The Promise used within is deliberately not returned.
 *
 * @param {HTMLElement} context - The navigation context
 * @param {PageReference} pageReference - A page reference location
 * @param {boolean} replace - When true the previous browser history entry should be replaced by this one
 * @param {NavigateOptions} options - Additional navigation options (i.e. switch locale)
 */
export declare function navigate(context: ContextId, pageReference: PageReference, replace?: boolean, options?: NavigateOptions): void;
/**
 * Generate a URL for the given page reference.
 *
 * @param {HTMLElement} context - The navigation context
 * @param {PageReference} pageReference - A page reference location
 *
 * @returns {Promise<string>}
 */
export declare function generateUrl(context: ContextId, pageReference: PageReference, options?: NavigateOptions): string | null;
//# sourceMappingURL=navigationApi.d.ts.map