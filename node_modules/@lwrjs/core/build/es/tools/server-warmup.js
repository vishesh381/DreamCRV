import SiteGenerator from './static-generation.js';
import { skipDirCreation } from './utils/dir.js';
import NetworkDispatcher from './utils/network-dispatcher.js';
import { getRuntimeEnvironment } from '@lwrjs/config';
import { logger } from '@lwrjs/diagnostics';
export async function warmupServer(config, internalRequestKey) {
    // De-duplicate warming messages if log level is warn or info
    if (logger.isWarnEnabled()) {
        logger.setOptions({ dedupe: new Set(['warn']) });
    }
    logger.info({ label: `server-warmup`, message: `starting` });
    const { basePath, port, routes, staticSiteGenerator } = config;
    staticSiteGenerator.outputDir = skipDirCreation;
    const urlRewriteMap = new Map();
    const runtimeEnvironment = getRuntimeEnvironment(config);
    // For each locale, generate all the modules
    await new SiteGenerator().generateRoutes(runtimeEnvironment, staticSiteGenerator, routes, basePath, new NetworkDispatcher(port, internalRequestKey), staticSiteGenerator.outputDir, urlRewriteMap);
    logger.info({ label: `server-warmup`, message: `complete` });
}
//# sourceMappingURL=server-warmup.js.map