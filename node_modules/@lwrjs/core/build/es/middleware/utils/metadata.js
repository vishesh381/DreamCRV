import { getVersionedModuleId } from '@lwrjs/shared-utils';
export async function normalizeResolvedUris(bundleDefinition, runtimeEnvironment, runtimeParams, moduleBundler, moduleRegistry) {
    const resolvedUris = [];
    // TODO might be able to remove this in the future but not sure how to properly send
    // back bundleRecord imports with absolute uris (lwc is the main one)
    if (bundleDefinition.bundleRecord.imports) {
        for (const theImport of bundleDefinition.bundleRecord.imports) {
            const childSpecifier = theImport.specifier;
            const id = await getVersionedModuleId(childSpecifier, moduleRegistry, runtimeParams);
            const uri = await moduleBundler.resolveModuleUri(id, runtimeEnvironment, runtimeParams);
            resolvedUris.push(uri);
        }
    }
    if (bundleDefinition.bundleRecord.dynamicImports) {
        for (const theImport of bundleDefinition.bundleRecord.dynamicImports) {
            const childSpecifier = theImport.specifier;
            const id = await getVersionedModuleId(childSpecifier, moduleRegistry, runtimeParams);
            const uri = await moduleBundler.resolveModuleUri(id, runtimeEnvironment, runtimeParams);
            resolvedUris.push(uri);
        }
    }
    return resolvedUris;
}
//# sourceMappingURL=metadata.js.map