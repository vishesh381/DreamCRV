import { getImportMetadataMappings } from '@lwrjs/shared-utils';
import { descriptions } from '@lwrjs/diagnostics';
import { RequestHandlerSpan, getTracer } from '@lwrjs/instrumentation';
import { getMappingIdentity } from './utils/identity.js';
import { handleErrors } from './utils/error-handling.js';
function createMappingMiddleware(context) {
    const { appConfig, moduleBundler, moduleRegistry, runtimeEnvironment: defaultRuntimeEnvironment, } = context;
    return async (req, res) => {
        if (!req.validateEnvironmentRequest(appConfig)) {
            res.status(400);
            res.send(descriptions.UNRESOLVABLE.INVALID_ENVIRONMENT(req.params.environment).message);
            return;
        }
        const { runtimeEnvironment, runtimeParams } = req.getRuntimeContext(defaultRuntimeEnvironment);
        const { moduleIds } = getMappingIdentity(req);
        const importMetadata = await getTracer().trace({
            name: RequestHandlerSpan.GetMapping,
            attributes: {
                url: req.originalUrl,
            },
        }, () => {
            return getImportMetadataMappings(moduleIds, runtimeEnvironment, runtimeParams, moduleRegistry, moduleBundler);
        });
        if (req.isSiteGeneration()) {
            res.setSiteGenerationMetadata({ importMetadata });
        }
        res.status(200).type('application/json').send(importMetadata);
    };
}
export function mappingMiddleware(app, context) {
    app.get([
        `/:apiVersion/mapping/:format/:compat/l/:locale/e/:environment/bi/:bundleSpecifier/mp/:specifiers`,
        `/:apiVersion/mapping/:format/:compat/l/:locale/e/:environment/mp/:specifiers`,
        `/:apiVersion/mapping/:format/:compat/l/:locale/bi/:bundleSpecifier/mp/:specifiers`,
        `/:apiVersion/mapping/:format/:compat/e/:environment/bi/:bundleSpecifier/mp/:specifiers`,
        `/:apiVersion/mapping/:format/:compat/l/:locale/mp/:specifiers`,
        `/:apiVersion/mapping/:format/:compat/e/:environment/mp/:specifiers`,
        `/:apiVersion/mapping/:format/:compat/bi/:bundleSpecifier/mp/:specifiers`,
        `/:apiVersion/mapping/:format/:compat/mp/:specifiers`,
    ], handleErrors(createMappingMiddleware(context)));
}
//# sourceMappingURL=mapping-middleware.js.map