var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  return __exportStar(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? {get: () => module2.default, enumerable: true} : {value: module2, enumerable: true})), module2);
};

// packages/@lwrjs/core/src/middleware/utils/request.ts
__markAsModule(exports);
__export(exports, {
  getRequestImporter: () => getRequestImporter,
  getRequestProperties: () => getRequestProperties
});
var import_qs = __toModule(require("qs"));
var import_path_to_regexp = __toModule(require("path-to-regexp"));
var import_shared_utils = __toModule(require("@lwrjs/shared-utils"));
function decodeParam(val) {
  if (typeof val !== "string" || val.length === 0) {
    return val;
  }
  return decodeURIComponent(val);
}
function getRequestProperties(pattern, req) {
  const {url = "/"} = req;
  const [pathname, search] = url.split("?");
  const keys = [];
  const regexp = (0, import_path_to_regexp.pathToRegexp)(pattern, keys);
  const matched = regexp.exec(pathname);
  const params = {};
  if (matched) {
    const query = import_qs.default.parse(search);
    for (let i = 1; i < matched.length; i++) {
      const key = keys[i - 1];
      const prop = key.name;
      const val = decodeParam(matched[i]);
      if (val !== void 0 || !Object.hasOwnProperty.call(params, prop)) {
        params[prop] = val;
      }
    }
    return {
      url,
      params,
      query
    };
  }
  return;
}
async function getRequestImporter(req, moduleRegistry, runtimeParams) {
  const importerSpecifier = req.query.importer;
  const importerModuleId = (0, import_shared_utils.explodeSpecifier)(importerSpecifier);
  const {entry} = await moduleRegistry.getModuleEntry(importerModuleId, runtimeParams);
  return entry;
}
