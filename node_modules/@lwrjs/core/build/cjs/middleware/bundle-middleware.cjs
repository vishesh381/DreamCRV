var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  return __exportStar(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? {get: () => module2.default, enumerable: true} : {value: module2, enumerable: true})), module2);
};

// packages/@lwrjs/core/src/middleware/bundle-middleware.ts
__markAsModule(exports);
__export(exports, {
  bundleMiddleware: () => bundleMiddleware
});
var import_shared_utils = __toModule(require("@lwrjs/shared-utils"));
var import_diagnostics = __toModule(require("@lwrjs/diagnostics"));
var import_instrumentation = __toModule(require("@lwrjs/instrumentation"));
var import_request = __toModule(require("./utils/request.cjs"));
var import_identity = __toModule(require("./utils/identity.cjs"));
var import_metadata = __toModule(require("./utils/metadata.cjs"));
var import_unsigned_module_redirect = __toModule(require("./redirects/unsigned-module-redirect.cjs"));
var import_error_handling = __toModule(require("./utils/error-handling.cjs"));
function createBundleMiddleware(context) {
  const {
    appConfig,
    moduleRegistry,
    moduleBundler,
    runtimeEnvironment: defaultRuntimeEnvironment
  } = context;
  const unsignedBundleRedirect = (0, import_unsigned_module_redirect.createUnsignedBundleRedirect)(moduleBundler);
  return async (req, res) => {
    if (!req.validateEnvironmentRequest(appConfig)) {
      res.status(400);
      res.send(import_diagnostics.descriptions.UNRESOLVABLE.INVALID_ENVIRONMENT(req.params.environment).message);
      return;
    }
    if (!req.validateJsonRequest()) {
      res.status(400);
      res.send(import_diagnostics.descriptions.UNRESOLVABLE.INVALID_JSON().message);
      return;
    }
    if (!req.validateApiVersion(appConfig)) {
      res.status(400);
      res.send(import_diagnostics.descriptions.UNRESOLVABLE.INVALID_API_VERSION(req.params.apiVersion, appConfig.apiVersion).message);
      return;
    }
    const {runtimeEnvironment, runtimeParams} = req.getRuntimeContext(defaultRuntimeEnvironment);
    const importer = req.query.importer ? await (0, import_request.getRequestImporter)(req, moduleRegistry, runtimeParams) : void 0;
    const {moduleId, signature} = (0, import_identity.getModuleIdentity)(req, importer);
    if (moduleId.importer || !signature) {
      await unsignedBundleRedirect(req, res, moduleId, runtimeEnvironment, runtimeParams);
      return;
    }
    const sourceMapUrl = req.path.replace("/bundle/", "/sourcemaps/bundle/");
    const bundleDefinition = await (0, import_instrumentation.getTracer)().trace({
      name: import_instrumentation.RequestHandlerSpan.GetBundle,
      attributes: {
        specifier: moduleId.specifier,
        url: req.originalUrl
      }
    }, () => {
      return moduleBundler.getModuleBundle(moduleId, {...runtimeEnvironment, bundle: true, sourceMapUrl}, runtimeParams);
    });
    if (req.isSiteGeneration()) {
      res.setSiteGenerationMetadata({
        moduleDefinition: bundleDefinition,
        resolvedUris: await (0, import_metadata.normalizeResolvedUris)(bundleDefinition, runtimeEnvironment, runtimeParams, moduleBundler, moduleRegistry)
      });
    }
    if (signature !== import_shared_utils.LATEST_SIGNATURE) {
      res.setHeader("Cache-control", "public, max-age=31536000, immutable");
    }
    res.status(200).type("application/javascript").send(await bundleDefinition.getCode());
  };
}
function createSourceMapMiddleware(context) {
  const {appConfig, moduleBundler, runtimeEnvironment: defaultRuntimeEnvironment} = context;
  return async (req, res) => {
    if (!req.validateEnvironmentRequest(appConfig)) {
      res.status(400);
      res.send(import_diagnostics.descriptions.UNRESOLVABLE.INVALID_ENVIRONMENT(req.params.environment).message);
      return;
    }
    const {runtimeEnvironment} = req.getRuntimeContext(defaultRuntimeEnvironment);
    const {moduleId, signature} = (0, import_identity.getModuleIdentity)(req);
    const bundleDef = await moduleBundler.getModuleBundle(moduleId, runtimeEnvironment);
    if (signature !== import_shared_utils.LATEST_SIGNATURE) {
      res.setHeader("Cache-control", "public, max-age=31536000, immutable");
    }
    res.status(200).type("application/json").send(bundleDef.map);
  };
}
function bundleMiddleware(app, context) {
  app.get([
    `/:apiVersion/bundle/:format/:compat?/l/:locale/e/:environment/bi/:bundleSpecifier/module/mi/:specifier/latest/:prettyUrl?`,
    `/:apiVersion/bundle/:format/:compat?/l/:locale/e/:environment/bi/:bundleSpecifier/module/mi/:specifier/s/:signature/:prettyUrl?`,
    `/:apiVersion/bundle/:format/:compat?/l/:locale/bi/:bundleSpecifier/module/mi/:specifier/latest/:prettyUrl?`,
    `/:apiVersion/bundle/:format/:compat?/l/:locale/bi/:bundleSpecifier/module/mi/:specifier/s/:signature/:prettyUrl?`,
    `/:apiVersion/bundle/:format/:compat?/e/:environment/bi/:bundleSpecifier/module/mi/:specifier/latest/:prettyUrl?`,
    `/:apiVersion/bundle/:format/:compat?/e/:environment/bi/:bundleSpecifier/module/mi/:specifier/s/:signature/:prettyUrl?`,
    `/:apiVersion/bundle/:format/:compat?/bi/:bundleSpecifier/module/mi/:specifier/latest/:prettyUrl?`,
    `/:apiVersion/bundle/:format/:compat?/bi/:bundleSpecifier/module/mi/:specifier/s/:signature/:prettyUrl?`,
    `/:apiVersion/bundle/:format/:compat?/l/:locale/e/:environment/bi/:bundleSpecifier/module/mi/:specifier`,
    `/:apiVersion/bundle/:format/:compat?/l/:locale/bi/:bundleSpecifier/module/mi/:specifier`,
    `/:apiVersion/bundle/:format/:compat?/e/:environment/bi/:bundleSpecifier/module/mi/:specifier`,
    `/:apiVersion/bundle/:format/:compat?/bi/:bundleSpecifier/module/mi/:specifier`
  ], (0, import_error_handling.handleErrors)(createBundleMiddleware(context)));
  app.get([
    `/:apiVersion/sourcemaps/bundle/:format/:compat?/l/:locale/e/:environment/bi/:bundleSpecifier/module/mi/:specifier/latest/:prettyUrl?`,
    `/:apiVersion/sourcemaps/bundle/:format/:compat?/l/:locale/e/:environment/bi/:bundleSpecifier/module/mi/:specifier/s/:signature/:prettyUrl?`,
    `/:apiVersion/sourcemaps/bundle/:format/:compat?/l/:locale/bi/:bundleSpecifier/module/mi/:specifier/latest/:prettyUrl?`,
    `/:apiVersion/sourcemaps/bundle/:format/:compat?/l/:locale/bi/:bundleSpecifier/module/mi/:specifier/s/:signature/:prettyUrl?`,
    `/:apiVersion/sourcemaps/bundle/:format/:compat?/e/:environment/bi/:bundleSpecifier/module/mi/:specifier/latest/:prettyUrl?`,
    `/:apiVersion/sourcemaps/bundle/:format/:compat?/e/:environment/bi/:bundleSpecifier/module/mi/:specifier/s/:signature/:prettyUrl?`,
    `/:apiVersion/sourcemaps/bundle/:format/:compat?/bi/:bundleSpecifier/module/mi/:specifier/latest/:prettyUrl?`,
    `/:apiVersion/sourcemaps/bundle/:format/:compat?/bi/:bundleSpecifier/module/mi/:specifier/s/:signature/:prettyUrl?`
  ], (0, import_error_handling.handleErrors)(createSourceMapMiddleware(context)));
}
