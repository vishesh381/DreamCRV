import type { ProviderContext, AssetProvider, AssetSource, Watcher, LwrAppEmitter, AssetIdentifier, ResourcePaths } from '@lwrjs/types';
export default class FsAssetProvider implements AssetProvider {
    name: string;
    emitter: LwrAppEmitter;
    watcher?: Watcher;
    cachedAssets: Map<string, AssetSource>;
    resourcePaths: ResourcePaths;
    assetPathMap: Map<string, string>;
    basePath: string;
    constructor(_pluginConfig: unknown, providerConfig: ProviderContext);
    onModuleChange(fileChanged: string): Promise<void>;
    initialize(): Promise<void>;
    /**
     * Public API to get an AssetSource object from an asset identifier
     */
    getAsset(assetId: AssetIdentifier): Promise<AssetSource | undefined>;
    /**
     * Get and AssetSource object from a resolved filesystem file path.
     */
    private getAssetFromFSPath;
}
//# sourceMappingURL=index.d.ts.map