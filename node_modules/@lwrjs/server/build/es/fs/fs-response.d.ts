/// <reference types="node" />
/// <reference types="node" />
import type { Readable } from 'stream';
import type http from 'http';
import type { FsContext, MiddlewareResponse } from '@lwrjs/types';
export default class FsResponse implements MiddlewareResponse {
    context: Required<FsContext>;
    constructor(context: FsContext);
    hasHeader(name: string): boolean;
    set(headers: http.IncomingHttpHeaders): void;
    setHeader(name: string, value: string | string[]): void;
    status(status: number): MiddlewareResponse;
    send(body: any): void;
    setSiteGenerationMetadata(metadata: any): void;
    sendStatus(httpCode: number): void;
    stream(stream: Readable): void;
    type(type: string): MiddlewareResponse;
    cookie(name: string, value: string, options: any): MiddlewareResponse;
}
//# sourceMappingURL=fs-response.d.ts.map