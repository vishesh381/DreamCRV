import { logger } from '@lwrjs/diagnostics';
import { getSpecifier } from '@lwrjs/shared-utils';
/**
 * This module provider is a shortcut solution to enable LWR@MRT local development. External
 * dependencies will be assigned a hardcoded empty string version during local component
 * compilation. The version will be ignored during linking.
 *
 */
export default class FallthroughModuleProvider {
    constructor() {
        this.name = 'fallthrough-module-provider';
    }
    async getModule(moduleId) {
        logger.warn({
            label: `${this.name}`,
            message: `Unable to resolve module source for "${moduleId.specifier}"`,
        });
        return undefined;
    }
    async getModuleEntry(moduleId) {
        logger.debug({
            label: `${this.name}`,
            message: `Assuming "${moduleId.specifier}" is external`,
        });
        return {
            id: getSpecifier({ ...moduleId }),
            version: '',
            specifier: moduleId.specifier,
            entry: 'entry-not-provided',
        };
    }
}
//# sourceMappingURL=fallthrough-module-provider.js.map