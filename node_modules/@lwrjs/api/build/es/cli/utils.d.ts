import type { LwrProxyConfiguration } from '@lwrjs/dev-proxy-server';
export declare function getDefaultBuildDirectory(rootDir: string, configFile: string, target: string): string;
interface Versions {
    lwrVersion: string;
    lwcVersion: string;
}
/**
 * Get LWR and LWC versions from a bundle
 *
 * @param filePath
 * @returns
 */
export declare function getVersions(filePath: string): Versions;
/**
 * Checks if the given version is compatible with the minimum supported version.
 * @param currentVersion - The current version of the package.
 * @param minSupportedVersion - The minimum supported version of the package.
 * @returns true if the current version is compatible, false otherwise.
 */
export declare function isMinVersionCompatible(currentVersion: string, minSupportedVersion: string): boolean;
/**
 * Checks if the given version is compatible with the maximum supported version.
 * @param currentVersion - The current version of the package.
 * @param maxSupportedVersion - The maximum supported version of the package.
 * @returns true if the current version is compatible, false otherwise.
 */
export declare function isMaxVersionCompatible(currentVersion: string, maxSupportedVersion: string): boolean;
/**
 * Creates a proxy server or adds proxy routes to an existing server.
 * @param runtimePort  - The port for the site.
 * @param proxyPort - The port for the proxy.
 * @param proxyConfig - Proxy configuration, including the proxy rules (path -> URI)
 */
export declare function setupProxy(runtimePort: number, proxyPort: number, proxyConfig?: LwrProxyConfiguration): Promise<void>;
export {};
//# sourceMappingURL=utils.d.ts.map