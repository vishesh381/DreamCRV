import type { BundleDefinition, BundleGroups, BundleSigner, ModuleBundler } from '@lwrjs/types';
export declare function getGroupName(rawSpecifier: string, groupsConfig: BundleGroups): string | undefined;
export declare function isGroupie(rawSpecifier: string, groupsConfig: BundleGroups): boolean;
/**
 * Create an AMD Alias to another AMD module
 *
 * In the spirit of...
 * LWR.define('alias', 'og', og=>og);
 *
 * But if OG has a default it is exposed as exports.default
 *
 * All enumerable properties of og are exposed as enumerable properties of exports.
 *
 */
export declare function createAmdAlias(aliasSpecifier: string, originalSpecifier: string): string;
/**
 * Creates a BundleSigner to fetch bundle signatures.  This creates a facade over the bundle registry.
 */
export declare function createBundleSigner(moduleBundler: ModuleBundler): BundleSigner;
export declare function signBundle(bundleDef: BundleDefinition | undefined): string;
//# sourceMappingURL=bundle.d.ts.map