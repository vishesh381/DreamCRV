import { rollup } from 'rollup';
/**
 * When importing these modules make sure the optional dependencies are installed:
 * - 'rollup' for convertToAmd()
 */
export const AMD_DEFINE = 'LWR.define';
const AMD_ROLLUP_PLUGIN = function (rootId, source) {
    return {
        name: 'lwr-amd-inline',
        resolveId(id) {
            return rootId === id ? id : undefined;
        },
        load(id) {
            return rootId === id ? source : undefined;
        },
    };
};
export async function convertToAmd(source, { id }, forceNamedExports = true) {
    const bundler = await rollup({
        input: id,
        plugins: [AMD_ROLLUP_PLUGIN(id, source)],
        onwarn(warning, warn) {
            // do not print out these: 'a' is imported by b, but could not be resolved â€“ treating it as an external dependency
            if (warning.code === 'UNRESOLVED_IMPORT')
                return;
            warn(warning);
        },
    });
    const { output } = await bundler.generate({
        amd: { id, define: AMD_DEFINE },
        exports: forceNamedExports ? 'named' : 'auto',
        format: 'amd',
    });
    const { code } = output[0];
    return { code, map: null };
}
//# sourceMappingURL=compiler.js.map