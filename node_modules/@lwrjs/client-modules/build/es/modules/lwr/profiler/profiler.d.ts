import type { LWRMetric } from '../metrics/metrics.js';
declare const enum Phase {
    Start = 0,
    End = 1
}
export type Metadata = {
    [key: string]: string | number | boolean;
};
interface LWRLogInfo {
    id: LWRMetric;
    specifier?: string;
    specifierIndex?: number;
    metadata?: Metadata;
}
interface LWRDispatcherInfo extends LWRLogInfo {
    phase: Phase;
}
type LogOperation = (info: LWRLogInfo) => void;
export type LogDispatcher = (info: LWRDispatcherInfo) => void;
export interface ProfilerAPI {
    logOperationStart: LogOperation;
    logOperationEnd: LogOperation;
}
export declare function attachDispatcher(dispatcher: LogDispatcher): void;
export declare function logOperationStart({ id, specifier, specifierIndex, metadata }: LWRLogInfo): void;
export declare function logOperationEnd({ id, specifier, specifierIndex, metadata }: LWRLogInfo): void;
export {};
//# sourceMappingURL=profiler.d.ts.map