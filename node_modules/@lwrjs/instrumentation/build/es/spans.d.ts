export declare enum ConfigSpan {
    LoadConfig = "lwr.config.load",
    ExecuteConfigHooks = "lwr.config.hooks.init",
    ExecuteStartHooks = "lwr.config.hooks.start",
    ExecuteInstrHooks = "lwr.config.hooks.instrumentation",
    ResolveConfig = "lwr.config.resolve",
    ValidateConfig = "lwr.config.validate"
}
export declare enum CoreSpan {
    CreateServer = "lwr.core.create",
    CreateServerContext = "lwr.core.context",
    InitServer = "lwr.core.init",
    StartServer = "lwr.core.start",
    UnhandledRejection = "lwr.core.unhandledRejection"
}
export declare enum LambdaSpan {
    CreateHandler = "lwr.lambda.create",
    CreateServerContext = "lwr.lambda.context",
    UnhandledRejection = "lwr.lambda.unhandledRejection"
}
export declare enum RequestHandlerSpan {
    GetView = "lwr.handle.view",
    GetAsset = "lwr.handle.asset",
    GetModule = "lwr.handle.module",
    GetBundle = "lwr.handle.bundle",
    GetResource = "lwr.handle.resource",
    GetMapping = "lwr.handle.mapping"
}
export declare enum ViewSpan {
    BootstrapService = "lwr.view.ssr.service",
    CreateLoader = "lwr.view.ssr.createLoader",
    ExecuteRouteHandler = "lwr.view.routeHandler",
    ExecuteServices = "lwr.view.ssr.services",
    Fetch = "lwr.view.ssr.fetch",
    Generate = "lwr.view.generate",
    GetServerData = "lwr.view.ssr.data",
    LoadAppCode = "lwr.view.ssr.loadAppCode",
    ParseView = "lwr.view.parse",
    PreloadData = "lwr.view.preload.data",
    RenderComponent = "lwr.view.ssr.renderComponent",
    RenderPage = "lwr.view.ssr.renderPage",
    RenderIsland = "lwr.view.ssr.island",
    RenderView = "lwr.view.render",
    ServerBundle = "lwr.view.ssr.bundle",
    Transform = "lwr.view.transform"
}
export declare enum BundleSpan {
    GetBundle = "lwr.bundle.get",
    ReadBundle = "lwr.bundle.read",
    Rollup = "lwr.bundle.rollup"
}
export declare const DefaultSpans: Set<string>;
export type LWRSpan = ConfigSpan | CoreSpan | LambdaSpan | RequestHandlerSpan | ViewSpan | BundleSpan;
export declare const ServerTimingSupportedSpans: Set<string>;
//# sourceMappingURL=spans.d.ts.map