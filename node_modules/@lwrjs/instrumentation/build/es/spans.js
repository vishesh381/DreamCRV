export var ConfigSpan;
(function (ConfigSpan) {
    ConfigSpan["LoadConfig"] = "lwr.config.load";
    ConfigSpan["ExecuteConfigHooks"] = "lwr.config.hooks.init";
    ConfigSpan["ExecuteStartHooks"] = "lwr.config.hooks.start";
    ConfigSpan["ExecuteInstrHooks"] = "lwr.config.hooks.instrumentation";
    ConfigSpan["ResolveConfig"] = "lwr.config.resolve";
    ConfigSpan["ValidateConfig"] = "lwr.config.validate";
})(ConfigSpan || (ConfigSpan = {}));
export var CoreSpan;
(function (CoreSpan) {
    CoreSpan["CreateServer"] = "lwr.core.create";
    CoreSpan["CreateServerContext"] = "lwr.core.context";
    CoreSpan["InitServer"] = "lwr.core.init";
    CoreSpan["StartServer"] = "lwr.core.start";
    CoreSpan["UnhandledRejection"] = "lwr.core.unhandledRejection";
})(CoreSpan || (CoreSpan = {}));
export var LambdaSpan;
(function (LambdaSpan) {
    LambdaSpan["CreateHandler"] = "lwr.lambda.create";
    LambdaSpan["CreateServerContext"] = "lwr.lambda.context";
    LambdaSpan["UnhandledRejection"] = "lwr.lambda.unhandledRejection";
})(LambdaSpan || (LambdaSpan = {}));
export var RequestHandlerSpan;
(function (RequestHandlerSpan) {
    RequestHandlerSpan["GetView"] = "lwr.handle.view";
    RequestHandlerSpan["GetAsset"] = "lwr.handle.asset";
    RequestHandlerSpan["GetModule"] = "lwr.handle.module";
    RequestHandlerSpan["GetBundle"] = "lwr.handle.bundle";
    RequestHandlerSpan["GetResource"] = "lwr.handle.resource";
    RequestHandlerSpan["GetMapping"] = "lwr.handle.mapping";
})(RequestHandlerSpan || (RequestHandlerSpan = {}));
export var ViewSpan;
(function (ViewSpan) {
    ViewSpan["BootstrapService"] = "lwr.view.ssr.service";
    ViewSpan["CreateLoader"] = "lwr.view.ssr.createLoader";
    ViewSpan["ExecuteRouteHandler"] = "lwr.view.routeHandler";
    ViewSpan["ExecuteServices"] = "lwr.view.ssr.services";
    ViewSpan["Fetch"] = "lwr.view.ssr.fetch";
    ViewSpan["Generate"] = "lwr.view.generate";
    ViewSpan["GetServerData"] = "lwr.view.ssr.data";
    ViewSpan["LoadAppCode"] = "lwr.view.ssr.loadAppCode";
    ViewSpan["ParseView"] = "lwr.view.parse";
    ViewSpan["PreloadData"] = "lwr.view.preload.data";
    ViewSpan["RenderComponent"] = "lwr.view.ssr.renderComponent";
    ViewSpan["RenderPage"] = "lwr.view.ssr.renderPage";
    ViewSpan["RenderIsland"] = "lwr.view.ssr.island";
    ViewSpan["RenderView"] = "lwr.view.render";
    ViewSpan["ServerBundle"] = "lwr.view.ssr.bundle";
    ViewSpan["Transform"] = "lwr.view.transform";
})(ViewSpan || (ViewSpan = {}));
export var BundleSpan;
(function (BundleSpan) {
    BundleSpan["GetBundle"] = "lwr.bundle.get";
    BundleSpan["ReadBundle"] = "lwr.bundle.read";
    BundleSpan["Rollup"] = "lwr.bundle.rollup";
})(BundleSpan || (BundleSpan = {}));
export const DefaultSpans = new Set([
    LambdaSpan.CreateHandler,
    LambdaSpan.UnhandledRejection,
    RequestHandlerSpan.GetView,
    RequestHandlerSpan.GetAsset,
    RequestHandlerSpan.GetModule,
    RequestHandlerSpan.GetBundle,
    RequestHandlerSpan.GetResource,
    RequestHandlerSpan.GetMapping,
    ViewSpan.BootstrapService,
    ViewSpan.CreateLoader,
    ViewSpan.ExecuteRouteHandler,
    ViewSpan.Fetch,
    ViewSpan.Generate,
    ViewSpan.GetServerData,
    ViewSpan.LoadAppCode,
    ViewSpan.ParseView,
    ViewSpan.ExecuteServices,
    ViewSpan.RenderComponent,
    ViewSpan.RenderView,
]);
export const ServerTimingSupportedSpans = new Set([
    RequestHandlerSpan.GetView,
    ViewSpan.ParseView,
    ViewSpan.CreateLoader,
    ViewSpan.LoadAppCode,
    ViewSpan.ExecuteServices,
    ViewSpan.RenderComponent,
    ViewSpan.Generate,
]);
//# sourceMappingURL=spans.js.map