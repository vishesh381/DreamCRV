import type { RendererAPI } from '../renderer';
import type { VStatic, VStaticPart } from '../vnodes';
/**
 * Given an array of static parts, mounts the DOM element to the part based on the staticPartId
 * @param root the root element
 * @param parts an array of VStaticParts
 * @param renderer the renderer to use
 */
export declare function traverseAndSetElements(root: Element, parts: VStaticPart[], renderer: RendererAPI): void;
/**
 * Given an array of static parts, do all the mounting required for these parts.
 * @param root the root element
 * @param vnode the parent VStatic
 * @param renderer the renderer to use
 */
export declare function mountStaticParts(root: Element, vnode: VStatic, renderer: RendererAPI): void;
/**
 * Updates the static elements based on the content of the VStaticParts
 * @param n1 the previous VStatic vnode
 * @param n2 the current VStatic vnode
 * @param renderer the renderer to use
 */
export declare function patchStaticParts(n1: VStatic, n2: VStatic, renderer: RendererAPI): void;
/**
 * Mounts the hydration specific attributes
 * @param vnode the parent VStatic node
 * @param renderer the renderer to use
 */
export declare function hydrateStaticParts(vnode: VStatic, renderer: RendererAPI): void;
//# sourceMappingURL=static-parts.d.ts.map