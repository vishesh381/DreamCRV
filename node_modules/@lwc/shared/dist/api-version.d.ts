export declare const enum APIVersion {
    V58_244_SUMMER_23 = 58,
    V59_246_WINTER_24 = 59,
    V60_248_SPRING_24 = 60,
    V61_250_SUMMER_24 = 61,
    V62_252_WINTER_25 = 62,
    V63_254_SPRING_25 = 63
}
export declare const LOWEST_API_VERSION: APIVersion;
export declare const HIGHEST_API_VERSION: APIVersion;
/**
 *
 * @param version
 */
export declare function getAPIVersionFromNumber(version: number | undefined): APIVersion;
export declare const enum APIFeature {
    /**
     * Lowercase all scope tokens, enable the SVG static optimization
     */
    LOWERCASE_SCOPE_TOKENS = 0,
    /**
     * If enabled, all parse5 errors will result in a compile-time error, rather than some being treated as warnings
     * (for backwards compatibility).
     */
    TREAT_ALL_PARSE5_ERRORS_AS_ERRORS = 1,
    /**
     * If enabled, use fragments for slots in light DOM.
     */
    USE_FRAGMENTS_FOR_LIGHT_DOM_SLOTS = 2,
    /**
     * If enabled, Babel object rest spread polyfills are not applied, and the native format is used instead.
     */
    DISABLE_OBJECT_REST_SPREAD_TRANSFORMATION = 3,
    /**
     * If enabled, `registerDecorators()` calls will only be added to classes that extend from another class.
     * This avoids unnecessary decorators on classes that cannot possibly be LightningElements.
     */
    SKIP_UNNECESSARY_REGISTER_DECORATORS = 4,
    /**
     * If enabled, comment nodes will be added to the beginning and end of each VFragment node, used
     * as anchors/bookends for efficient DOM operations. If disabled, empty text nodes will be used
     * instead of comment nodes.
     */
    USE_COMMENTS_FOR_FRAGMENT_BOOKENDS = 5,
    /**
     * If enabled, allows slot forwarding for light DOM slots. This will cause the slot attribute of the slotted
     * content to be updated to match the slot attribute of the light DOM slot it slotted into.
     */
    USE_LIGHT_DOM_SLOT_FORWARDING = 6,
    /**
     * If enabled, allows usage of the `attachInternals` and `ElementInternals` APIs, as well as
     * Form-Associated Custom Elements (FACE).
     */
    ENABLE_ELEMENT_INTERNALS_AND_FACE = 7,
    /**
     * If enabled, allow `this.hostElement` within a `LightningElement` to return the host element.
     */
    ENABLE_THIS_DOT_HOST_ELEMENT = 8,
    /**
     * If enabled, allow `this.style` within a `LightningElement` to return the `CSSStyleDeclaration`
     * for that element.
     */
    ENABLE_THIS_DOT_STYLE = 9,
    /**
     * If enabled, add support for complex class expressions in the template.
     */
    TEMPLATE_CLASS_NAME_OBJECT_BINDING = 10,
    /**
     * If enabled, add support for complex template expressions.
     */
    ENABLE_COMPLEX_TEMPLATE_EXPRESSIONS = 11
}
/**
 *
 * @param apiVersionFeature
 * @param apiVersion
 */
export declare function isAPIFeatureEnabled(apiVersionFeature: APIFeature, apiVersion: APIVersion): boolean;
//# sourceMappingURL=api-version.d.ts.map