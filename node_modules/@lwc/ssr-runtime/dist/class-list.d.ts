import type { LightningElement } from './lightning-element';
interface DOMTokenList {
    readonly length: number;
    value: string;
    toString(): string;
    add(...tokens: string[]): void;
    contains(token: string): boolean;
    item(index: number): string | null;
    remove(...tokens: string[]): void;
    replace(token: string, newToken: string): boolean;
    supports(token: string): boolean;
    toggle(token: string, force?: boolean): boolean;
    forEach(callbackfn: (value: string, key: number, parent: DOMTokenList) => void, thisArg?: any): void;
    [index: number]: string;
}
export declare class ClassList implements DOMTokenList {
    el: LightningElement;
    constructor(el: LightningElement);
    add(...newClassNames: string[]): void;
    contains(className: string): any;
    remove(...classNamesToRemove: string[]): void;
    replace(oldClassName: string, newClassName: string): boolean;
    toggle(classNameToToggle: string, force?: boolean): boolean;
    get value(): string;
    toString(): string;
    get length(): number;
    [index: number]: never;
    item(_index: number): string | null;
    supports(_token: string): boolean;
    forEach(_callbackfn: (value: string, key: number, parent: DOMTokenList) => void, _thisArg?: any): void;
}
export {};
//# sourceMappingURL=class-list.d.ts.map