export declare function api(..._: unknown[]): never;
export declare function createElement(..._: unknown[]): never;
export declare function freezeTemplate(..._: unknown[]): never;
export declare function getComponentDef(..._: unknown[]): never;
export declare function isComponentConstructor(..._: unknown[]): never;
export declare function parseFragment(..._: unknown[]): never;
export declare function parseSVGFragment(..._: unknown[]): never;
export declare function readonly(..._: unknown[]): never;
export declare function registerComponent(..._: unknown[]): never;
export declare function registerDecorators(..._: unknown[]): never;
export declare function registerTemplate(..._: unknown[]): never;
export declare function sanitizeAttribute(..._: unknown[]): never;
export declare function setFeatureFlag(..._: unknown[]): never;
export declare function setFeatureFlagForTest(..._: unknown[]): never;
export declare function swapComponent(..._: unknown[]): never;
export declare function swapStyle(..._: unknown[]): never;
export declare function swapTemplate(..._: unknown[]): never;
export declare function track(..._: unknown[]): never;
export declare function unwrap(..._: unknown[]): never;
export declare function wire(..._: unknown[]): never;
export declare const renderer: {
    isSyntheticShadowDefined: boolean;
    insert(..._: unknown[]): never;
    remove(..._: unknown[]): never;
    cloneNode(..._: unknown[]): never;
    createFragment(..._: unknown[]): never;
    createElement(..._: unknown[]): never;
    createText(..._: unknown[]): never;
    createComment(..._: unknown[]): never;
    createCustomElement(..._: unknown[]): never;
    nextSibling(..._: unknown[]): never;
    previousSibling(..._: unknown[]): never;
    attachShadow(..._: unknown[]): never;
    getProperty(..._: unknown[]): never;
    setProperty(..._: unknown[]): never;
    setText(..._: unknown[]): never;
    getAttribute(..._: unknown[]): never;
    setAttribute(..._: unknown[]): never;
    removeAttribute(..._: unknown[]): never;
    addEventListener(..._: unknown[]): never;
    removeEventListener(..._: unknown[]): never;
    dispatchEvent(..._: unknown[]): never;
    getClassList(..._: unknown[]): never;
    setCSSStyleProperty(..._: unknown[]): never;
    getBoundingClientRect(..._: unknown[]): never;
    querySelector(..._: unknown[]): never;
    querySelectorAll(..._: unknown[]): never;
    getElementsByTagName(..._: unknown[]): never;
    getElementsByClassName(..._: unknown[]): never;
    getChildren(..._: unknown[]): never;
    getChildNodes(..._: unknown[]): never;
    getFirstChild(..._: unknown[]): never;
    getFirstElementChild(..._: unknown[]): never;
    getLastChild(..._: unknown[]): never;
    getLastElementChild(..._: unknown[]): never;
    getTagName(..._: unknown[]): never;
    getStyle(..._: unknown[]): never;
    isConnected(..._: unknown[]): never;
    insertStylesheet(..._: unknown[]): never;
    assertInstanceOfHTMLElement(..._: unknown[]): never;
    ownerDocument(..._: unknown[]): never;
    registerContextConsumer(..._: unknown[]): never;
    attachInternals(..._: unknown[]): never;
    defineCustomElement(..._: unknown[]): never;
    getParentNode(..._: unknown[]): never;
    startTrackingMutations(..._: unknown[]): never;
    stopTrackingMutations(..._: unknown[]): never;
};
/**
 * The hot API is used to orchestrate hot swapping in client rendered components.
 * It doesn't do anything on the server side, however, you may import it.
 *
 * The whole point of defining this and exporting it is so that you can import it in isomorphic code without
 * an error being thrown by the import itself.
 */
export declare const hot: undefined;
//# sourceMappingURL=stubs.d.ts.map