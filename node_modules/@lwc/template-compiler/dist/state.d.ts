import { type scopeTokens } from './scopeTokens';
import type { BaseElement } from './shared/types';
import type { NormalizedConfig } from './config';
export default class State {
    config: NormalizedConfig;
    /**
     * Look up custom renderer config by tag name.
     */
    crElmToConfigMap: {
        [tagName: string]: {
            namespace: string | undefined;
            attributes: Set<string>;
        };
    };
    /**
     * Look up for directives that require custom renderer
     */
    crDirectives: Set<string>;
    /**
     * Cache the result of elements that have already been checked if they require custom renderer
     */
    crCheckedElements: Map<BaseElement, boolean>;
    /**
     * Filename of the HTML source
     */
    filename: string;
    /**
     * Contains the scopeTokens used in the template metadata
     */
    scopeTokens: scopeTokens;
    constructor(config: NormalizedConfig, filename: string);
}
//# sourceMappingURL=state.d.ts.map