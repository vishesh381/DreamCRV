import type { ChildNode as IrChildNode, Node as IrNode } from '@lwc/template-compiler';
import type { Statement as EsStatement } from 'estree';
import type { TemplateOpts, TransformerContext } from './types';
export declare function irChildrenToEs(children: IrChildNode[], cxt: TransformerContext, cb?: (child: IrChildNode) => (() => void) | void): EsStatement[];
export declare function irToEs<T extends IrNode>(node: T, cxt: TransformerContext): EsStatement[];
export declare function templateIrToEsTree(node: IrNode, contextOpts: TemplateOpts): {
    addImport: (imports: string | string[] | Record<string, string | undefined>, source?: string) => void;
    getImports: () => import("estree").ImportDeclaration[];
    statements: EsStatement[];
};
//# sourceMappingURL=ir-to-es.d.ts.map